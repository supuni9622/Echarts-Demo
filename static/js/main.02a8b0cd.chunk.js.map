{"version":3,"sources":["Navigation.js","Home.js","components/heatMap/HeatMapDefault.js","components/heatMap/EnterpriseHeatMap.js","components/heatMap/HeatMapIndex.js","components/lineChart/BasicLineChart.js","components/lineChart/SmoothLineChart.js","components/lineChart/StackedLineChart.js","components/lineChart/EnterpriseLineChart.js","components/lineChart/DynamicLineChart.js","components/lineChart/MultipleLinesChart.js","components/lineChart/LineChartIndex.js","components/barChart/SimpleBarChart.js","components/barChart/DoubleBarChart.js","components/barChart/EnterpriseDoubleBar.js","components/barChart/BarChartIndex.js","components/pieChart/PieChart.js","components/pieChart/PieChartIndex.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","className","to","Home","Container","style","minHeight","hours","days","data","map","item","Echarts","option","tooltip","position","animation","grid","height","top","xAxis","type","splitArea","show","yAxis","visualMap","min","max","calculable","orient","left","bottom","series","name","label","emphasis","itemStyle","shadowBlur","shadowColor","daySlotMap","HeatMap","heatMapData","forEach","hourOfDay","dayOfWeekValues","dayOfWeek","count","push","Number","color","borderColor","borderWidth","global","HeatMapIndex","Card","HeatMapDefault","EnterpriseHeatMap","LineChart","smooth","title","text","trigger","legend","right","containLabel","toolbox","feature","saveAsImage","boundaryGap","stack","xAxisData","lineOptions","lineChartData","key","counts","axisPointer","data2","rewardId","date","dateSeries","startDate","stopDate","dateArray","currentDate","moment","endDate","format","add","getDatesSeries","console","debug","transformLines","reduce","result","lineChartLineOptions","line","Map","x","values","log","lineChartData12","finalArr","months","ID","Name","UPI","Guru","Views","February","March","April","May","June","Ratings","Comments","TotalViews","FebJune","TotalRatings","AverageRatings","TotalComments","user","m","Month","LineChartIndex","BasicLineChart","SmoothLineChart","StackedLineChart","MultipleLinesChart","DynamicLineChart","EnterpriseLineChart","EBarChart","seriesData","dataZoom","dataZoomReset","showBackground","backgroundStyle","mark","dataView","readOnly","magicType","restore","axisTick","barGap","DoubleBarChart","bar1SeriesData","bar2SeriesData","bar1Name","bar2Name","dateTransform","dateSeriesForMemberSeries","activeCount","customersCreatedCount","memberSeriesData","newCount","memberSeriesArray","Object","activeCountArray","newCountArray","BarChartIndex","SimpleBarChart","EnterpriseDoubleBar","PieChart","ledgendNames","minWidth","formatter","radius","avoidLabelOverlap","fontSize","fontWeight","labelLine","memberDistributionData","genderData","keys","gender","ageData","age","tierData","tier","tierNameArray","genderNameArray","ageNameArray","PieChartIndex","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a8b0cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className='m-3 p-2'>\r\n            <Link to='/' className='btn btn-success mb-2 w-100'>Home</Link> <br/>\r\n            <Link to='/heat-map' className='btn btn-success mb-2 w-100'>Heat Map</Link> <br/>\r\n            <Link to='/line-chart' className='btn btn-success mb-2 w-100'>Line Chart</Link> <br/>\r\n            <Link to='/bar-chart' className='btn btn-success mb-2 w-100'>Bar Chart</Link> <br/>\r\n            <Link to='/pie-chart' className='btn btn-success mb-2 w-100'>Pie Chart</Link> <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container \r\n            style={{minHeight:'100vh'}}\r\n        >\r\n        <div className='w-100 home-wrapper pt-4 pr-3'>\r\n            <div className='box box1'>\r\n                Heat Map\r\n            </div>\r\n            <div className='box box2'>\r\n                Line Chart\r\n            </div>\r\n            <div className='box box3'>\r\n                 Icons\r\n            </div>\r\n            <div className='box box4'>\r\n                 Modal\r\n            </div>\r\n            <div className='box box5'>\r\n                Tooltip\r\n            </div>\r\n            <div className='box box6'>\r\n                CountUp\r\n            </div>\r\n            <div className='box box7'>\r\n                Idle Timer\r\n            </div>\r\n            <div className='box box8'>\r\n                Color Picker\r\n            </div>\r\n            <div className='box box9'>\r\n                Credit Cards\r\n            </div>\r\n            <div className='box box10'>\r\n                Date Picker\r\n            </div>\r\n            <div className='box box11'>\r\n                Date Range Picker\r\n            </div>\r\n            <div className='box box12'>\r\n                Presentation Deck\r\n            </div>\r\n            <div className='box box13'>\r\n                Video Player\r\n            </div>\r\n            <div className='box box14'>\r\n                Loading Indicator\r\n            </div>\r\n            <div className='box box15'>\r\n                Charts\r\n            </div>\r\n            <div className='box box16'>\r\n                Skelton Component\r\n            </div>\r\n            <div className='box box17'>\r\n                Moment\r\n            </div>\r\n            <div className='box box18'>\r\n                Material Table\r\n            </div>\r\n            <div className='box box19'>\r\n                Drop Zone\r\n            </div>\r\n            <div className='box box20'>\r\n                Image Gallery\r\n            </div>\r\n            <div className='box box21'>\r\n                Wizard\r\n            </div>\r\n            <div className='box box22'>\r\n                Virtualized Table\r\n            </div>\r\n            <div className='box box23'>\r\n                Notifications\r\n            </div>\r\n            <div className='box box24'>\r\n                Event Time Line\r\n            </div>\r\n            <div className='box box25'>\r\n                User Avatar\r\n            </div>\r\n            <div className='box box26'>\r\n                Drawer\r\n            </div>\r\n            <div className='box box27'>\r\n                Heat Map\r\n            </div>\r\n            <div className='box box28'>\r\n                Number Format\r\n            </div>\r\n            <div className='box box29'>\r\n                Form Validation\r\n            </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst hours = ['0', '1', '2', '3', '4', '5', '6',\r\n        '7', '8', '9','10','11',\r\n        '12', '13', '14', '15', '16', '17',\r\n        '18', '19', '20', '21', '22', '23'];\r\nconst days = ['Saturday', 'Friday', 'Thursday',\r\n        'Wednesday', 'Tuesday', 'Monday', 'Sunday'];\r\n\r\nlet data = [[3,0,8],[0,1,5],[0,2,9]];\r\n\r\ndata = data.map(function (item) {\r\n    return [item[1], item[0], item[2] || '-'];\r\n});\r\n\r\nconst Echarts = () => {\r\n    return (\r\n        <>\r\n            <ReactEcharts\r\n                option={{\r\n                    tooltip: {\r\n                        position: 'top'\r\n                    },\r\n                    animation: true,\r\n                    grid: {\r\n                        height: '50%',\r\n                        top: '20%'\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        data: hours,\r\n                        splitArea: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    yAxis: {\r\n                        type: 'category',\r\n                        data: days,\r\n                        splitArea: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    visualMap: {\r\n                        min: 0,\r\n                        max: 10,\r\n                        calculable: true,\r\n                        orient: 'horizontal',\r\n                        left: 'center',\r\n                        bottom: '15%'\r\n                    },\r\n                    series: [{\r\n                        name: 'Punch Card',\r\n                        type: 'heatmap',\r\n                        data: data,\r\n                        label: {\r\n                            show: true\r\n                        },\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    }]\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Echarts","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst hours = ['0', '1', '2', '3', '4', '5', '6',\r\n        '7', '8', '9','10','11',\r\n        '12', '13', '14', '15', '16', '17',\r\n        '18', '19', '20', '21', '22', '23'];\r\n\r\nconst days = ['Sunday', 'Saturday', 'Friday',\r\n        'Thursday', 'Wednusday', 'Tuesday', 'Monday'];\r\n\r\nconst daySlotMap = {\r\n    \"Monday\": 6,\r\n    \"Tuesday\": 5,\r\n    \"Wednesday\": 4,\r\n    \"Thursday\": 3,\r\n    \"Friday\": 2,\r\n    \"Saturday\": 1,\r\n    \"Sunday\": 0  \r\n    };\r\n\r\nconst HeatMap = () => {\r\n\r\n    const data = [{\"hourOfDay\":\"19\",\"dayOfWeekValues\":[{\"dayOfWeek\":\"Friday\",\"count\":1}]},{\"hourOfDay\":\"20\",\"dayOfWeekValues\":[{\"dayOfWeek\":\"Tuesday\",\"count\":1}]}]\r\n\r\n    const heatMapData = [];\r\n\r\n    data.forEach(({ hourOfDay, dayOfWeekValues = [] }) => {\r\n        dayOfWeekValues.forEach(({\r\n          dayOfWeek,\r\n          count\r\n        }) => {\r\n          heatMapData.push([Number(hourOfDay),daySlotMap[dayOfWeek],count]);\r\n        });\r\n    \r\n      });\r\n\r\n      //console.debug('Data ', heatMapData);\r\n\r\n    return (\r\n        <>\r\n            <ReactEcharts\r\n                option={{\r\n                    tooltip: {\r\n                        position: 'top'\r\n                    },\r\n                    animation: true,\r\n                    grid: {\r\n                        height: '70%',\r\n                        //top: '20%',\r\n                        //bottom:'50%'\r\n                    },\r\n                    color: [\"#3398DB\",'#003366', '#006699', '#4cabce'],\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        data: hours,\r\n                        position:'top',\r\n                        splitArea: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    yAxis: {\r\n                        type: 'category',\r\n                        data: days,\r\n                        splitArea: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    // visualMap: {\r\n                    //     min: 0,\r\n                    //     max: 10,\r\n                    //     calculable: true,\r\n                    //     orient: 'horizontal',\r\n                    //     left: 'center',\r\n                    //     bottom: '15%'\r\n                    // },\r\n                    series: [{\r\n                        name: 'Transactions',\r\n                        type: 'heatmap',\r\n                        data: heatMapData,\r\n                        label: {\r\n                            show: true\r\n                        },\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowColor: 'rgba(0, 0, 0,0.5)'\r\n                            }\r\n                        },\r\n                        // color: {\r\n                        //     type: 'linear',\r\n                        //     x: 0,\r\n                        //     y: 0,\r\n                        //     x2: 0,\r\n                        //     y2: 1,\r\n                        //     colorStops: [{\r\n                        //         offset: 0, color: 'rgb(0, 151, 230' // color at 0% position\r\n                        //     }, {\r\n                        //         offset: 1, color: 'rgb(0, 151, 230' // color at 100% position\r\n                        //     }]\r\n            \r\n                        // },\r\n                        borderColor: {\r\n                            type: 'solid',\r\n                            borderWidth : 2,\r\n                            // colorStops: [{\r\n                            //     offset: 0, color: \"#000\" // color at 0% position\r\n                            // }, {\r\n                            //     offset: 1, color: 'blue' // color at 100% position\r\n                            // }],\r\n                            global: false // false by default\r\n                        },\r\n                    }]\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeatMap","import React from 'react';\r\nimport HeatMapDefault from './HeatMapDefault';\r\nimport EnterpriseHeatMap from './EnterpriseHeatMap';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nconst HeatMapIndex = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Heat Map</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Default Heat Map</h6>\r\n                <div className=\"p-2\">\r\n                   <HeatMapDefault/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Heat Map with Dynamic Data</h6>\r\n                <div className=\"p-2\">\r\n                    <EnterpriseHeatMap/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeatMapIndex\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n                <ReactEcharts\r\n                    option={{\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        series: [{\r\n                            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                            type: 'line'\r\n                        }]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n                <ReactEcharts\r\n                    option={{\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        series: [{\r\n                            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n                            type: 'line',\r\n                            smooth: true\r\n                        }]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n                <ReactEcharts\r\n                    option={{\r\n                        title: {\r\n                            text: '折线图堆叠'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'axis'\r\n                        },\r\n                        legend: {\r\n                            data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n                        },\r\n                        grid: {\r\n                            left: '3%',\r\n                            right: '4%',\r\n                            bottom: '3%',\r\n                            containLabel: true\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                saveAsImage: {}\r\n                            }\r\n                        },\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            boundaryGap: false,\r\n                            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '邮件营销',\r\n                                type: 'line',\r\n                                stack: '总量',\r\n                                data: [120, 132, 101, 134, 90, 230, 210]\r\n                            },\r\n                            {\r\n                                name: '联盟广告',\r\n                                type: 'line',\r\n                                stack: '总量',\r\n                                data: [220, 182, 191, 234, 290, 330, 310]\r\n                            },\r\n                            {\r\n                                name: '视频广告',\r\n                                type: 'line',\r\n                                stack: '总量',\r\n                                data: [150, 232, 201, 154, 190, 330, 410]\r\n                            },\r\n                            {\r\n                                name: '直接访问',\r\n                                type: 'line',\r\n                                stack: '总量',\r\n                                data: [320, 332, 301, 334, 390, 330, 320]\r\n                            },\r\n                            {\r\n                                name: '搜索引擎',\r\n                                type: 'line',\r\n                                stack: '总量',\r\n                                data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n                            }\r\n                        ]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = ({xAxisData,data,lineOptions}) => {\r\n\r\n    const lineChartData = data.map((item)=>{\r\n        return(\r\n            {\r\n                name: item.key,\r\n                type: 'line',\r\n                //stack: '',\r\n                data: item.counts,\r\n                smooth: true\r\n            }\r\n        )   \r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n            <ReactEcharts\r\n                    option={{\r\n                    color: [\"#3398DB\",'#003366', '#006699', '#4cabce'],\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        //data: ['Dec-11', 'Dec-12', 'Dec-13', 'Dec-14', 'Dec-15','Dec-16','Dec-17','Dec-18','Dec-19']\r\n                        data:xAxisData\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    legend: {\r\n                        data: lineOptions\r\n                    },\r\n                    tooltip: {\r\n                        axisPointer: {\r\n                        animation: true\r\n                        }\r\n                    },\r\n                    series : lineChartData\r\n                    // series: [{ \r\n                    //     data: seriesData,\r\n                    //     type: 'line',\r\n                    //     smooth: true\r\n                    //     }]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = () => {\r\n\r\n    const lineabc = [\r\n        {\r\n            key: '1',\r\n            data : [12,45,78]\r\n        },\r\n        {\r\n            key: '2',\r\n            data : [52,45,98]\r\n        },\r\n        {\r\n            key: '3',\r\n            data : [67,34,25]\r\n        }\r\n    ]\r\n\r\n    const lineChartData = lineabc.map((item)=>{\r\n        return(\r\n            {\r\n                name: item.key,\r\n                type: 'line',\r\n                //stack: '',\r\n                data: item.data,\r\n                smooth: true\r\n            }\r\n        )   \r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n                <ReactEcharts\r\n                    option={{\r\n                    color: [\"#3398DB\",'#003366', '#006699', '#4cabce'],\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['one', 'two', 'three']\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    legend: {\r\n                        data: ['1', '2', '3']\r\n                    },\r\n                    tooltip: {\r\n                        axisPointer: {\r\n                        animation: true\r\n                        }\r\n                    },\r\n                    series : lineChartData\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mx-2\">\r\n                <ReactEcharts\r\n                    option={{\r\n                        title: {\r\n                            text: '折线图堆叠'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'axis'\r\n                        },\r\n                        legend: {\r\n                            data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n                        },\r\n                        grid: {\r\n                            left: '3%',\r\n                            right: '4%',\r\n                            bottom: '3%',\r\n                            containLabel: true\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                saveAsImage: {}\r\n                            }\r\n                        },\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            boundaryGap: false,\r\n                            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '邮件营销',\r\n                                type: 'line',\r\n                                data: [120, 132, 101, 134, 90, 230, 210]\r\n                            },\r\n                            {\r\n                                name: '联盟广告',\r\n                                type: 'line',\r\n                                data: [220, 182, 191, 234, 290, 330, 310]\r\n                            },\r\n                            {\r\n                                name: '视频广告',\r\n                                type: 'line',\r\n                                data: [150, 232, 201, 154, 190, 330, 410]\r\n                            },\r\n                            {\r\n                                name: '直接访问',\r\n                                type: 'line',\r\n                                data: [320, 332, 301, 334, 390, 330, 320]\r\n                            },\r\n                            {\r\n                                name: '搜索引擎',\r\n                                type: 'line',\r\n                                data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n                            }\r\n                        ]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport BasicLineChart from './BasicLineChart';\r\nimport SmoothLineChart from './SmoothLineChart';\r\nimport StackedLineChart from './StackedLineChart';\r\nimport EnterpriseLineChart from './EnterpriseLineChart';\r\nimport DynamicLineChart from './DynamicLineChart';\r\nimport MultipleLinesChart from './MultipleLinesChart';\r\n\r\n\r\nconst data2 = [\r\n    {\r\n      rewardId: 1,\r\n      date: \"2020-12-12\",\r\n      count: 12\r\n    },\r\n    {\r\n      rewardId: 1,\r\n      date: \"2020-12-13\",\r\n      count: 44\r\n    },\r\n    {\r\n        rewardId: 1,\r\n        date: \"2020-12-15\",\r\n        count: 30\r\n      },\r\n      {\r\n        rewardId: 2,\r\n        date: \"2020-12-12\",\r\n        count: 34\r\n      },\r\n    {\r\n      rewardId: 2,\r\n      date: \"2020-12-13\",\r\n      count: 10\r\n    },\r\n   \r\n    {\r\n      rewardId: 2,\r\n      date: \"2020-12-14\",\r\n      count: 34\r\n    },\r\n    \r\n    {\r\n      rewardId: 2,\r\n      date: \"2020-12-18\",\r\n      count: 10\r\n    },\r\n  ];\r\n\r\n  const getDatesSeries = (startDate, stopDate) => {\r\n    let dateArray = [];\r\n    let currentDate = moment(startDate);\r\n    let endDate = moment(stopDate);\r\n    while (currentDate <= endDate) {\r\n        dateArray.push( moment(currentDate).format('YYYY-MM-DD') )\r\n        currentDate = moment(currentDate).add(1, 'days');\r\n    }\r\n    return dateArray;\r\n};\r\n\r\nconst fromDate = '2020-12-11';\r\nconst toDate = '2020-12-19';\r\n\r\nconst dateSeries = getDatesSeries(fromDate,toDate);\r\n\r\nconsole.debug('datessss', dateSeries);\r\n\r\n     \r\nconst removeLineKeyDuplication = (data, key) => {\r\n    return [\r\n      ...new Map(\r\n        data.map(x => [key(x), x])\r\n      ).values()\r\n    ]\r\n  };\r\n\r\n  const transformLines = data2.reduce((result, { rewardId }) => {\r\n    result.push({ key: rewardId });\r\n    return result;\r\n  }, []);\r\n\r\n  const lineChartLineOptions = removeLineKeyDuplication(transformLines, line => line.key)\r\n\r\n  console.log('Today 576576', lineChartLineOptions);\r\n\r\n  const lineChartData12 = lineChartLineOptions.map((item)=>{\r\n    return(\r\n        {\r\n            key : item.key,\r\n            counts : [],\r\n        }\r\n    )   \r\n});\r\n\r\nconsole.log('Today 3', lineChartData12);\r\ndata2.forEach(({\r\n    rewardId,\r\n    count,\r\n    date\r\n  }) => {\r\n    lineChartData12.forEach(({ key, counts= []}) => {\r\n      if(key===rewardId){    \r\n         counts.push(count)\r\n      }\r\n    }); \r\n  });\r\n\r\nvar UserMatrix = [{\r\n    ID: 1,\r\n    Name: \"Sid Edelmann\",\r\n    UPI: 20483,\r\n    Guru: \"Yes\",\r\n    Views: {\r\n        February: 12,\r\n        March: 8,\r\n        April: 10,\r\n        May: 11,\r\n        June: 8\r\n    },\r\n    Ratings: {\r\n        February: 1,\r\n        March: 2,\r\n        April: 0,\r\n        May: 0,\r\n        June: 0\r\n    },\r\n    Comments: {\r\n        February: 1,\r\n        March: 1,\r\n        April: 0,\r\n        May: 0,\r\n        June: 1\r\n    },\r\n    TotalViews: {\r\n        FebJune: 49\r\n    },\r\n    TotalRatings: {\r\n        FebJune: 3\r\n    },\r\n    AverageRatings: {\r\n        FebJune: '#'\r\n    },\r\n    TotalComments: {\r\n        FebJune: 3\r\n    }\r\n}, {\r\n    ID: 6,\r\n    Name: \"Parthasarathy Perumbali\",\r\n    UPI: \"999999\",\r\n    Guru: \"\",\r\n    Views: {\r\n        February: \"8\",\r\n        March: \"5\",\r\n        April: \"4\",\r\n        May: \"1\",\r\n        June: \"8\"\r\n    },\r\n    Ratings: {\r\n        February: \"2\",\r\n        March: \"1\",\r\n        April: \"2\",\r\n        May: \"1\",\r\n        June: \"2\"\r\n    },\r\n    Comments: {\r\n        February: \"3\",\r\n        March: \"0\",\r\n        April: \"0\",\r\n        May: \"0\",\r\n        June: \"0\"\r\n    },\r\n    TotalViews: {\r\n        FebJune: \"26\"\r\n    },\r\n    TotalRatings: {\r\n        FebJune: \"8\"\r\n    },\r\n    AverageRatings: {\r\n        FebJune: \"#\"\r\n    },\r\n    TotalComments: {\r\n        FebJune: \"3\"\r\n    }\r\n}];\r\n\r\nvar finalArr = [];\r\nvar months = [\"February\", \"March\", \"April\", \"May\", \"June\"];\r\n//var attr = [\"Views\", \"Ratings\", \"Comments\"];\r\nUserMatrix.forEach(function (user) {\r\n    months.forEach(function (m) {\r\n        finalArr.push({\r\n            Name: user.Name,\r\n            Month: m,\r\n            Views: user.Views[m],\r\n            Ratings: user.Ratings[m],\r\n            Comments: user.Comments[m]\r\n        });\r\n    });\r\n});\r\n\r\nconsole.log('Test----------------', finalArr);\r\n\r\n//=================================================================\r\n\r\n\r\n\r\nconst LineChartIndex = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Line Charts</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Basic Line Chart</h6>\r\n                <div className=\"p-2\">\r\n                   <BasicLineChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Smooth Line Chart</h6>\r\n                <div className=\"p-2\">\r\n                    <SmoothLineChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Stacked Line Chart</h6>\r\n                <div className=\"p-2\">\r\n                  <StackedLineChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Multiple Line Chart with Static Data</h6>\r\n                <div className=\"p-2\">\r\n                   <MultipleLinesChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Multiple Line Chart with Dynamic Data Test Component</h6>\r\n                <div className=\"p-2\">\r\n                   <DynamicLineChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Multiple Line Chart with Dynamic Data</h6>\r\n                <div className=\"p-2\">\r\n                   <EnterpriseLineChart lineOptions={lineChartLineOptions} xAxisData={['Dec-12','Dec-15','Dec-17','Dec-19','Dec-21']} data={lineChartData12}/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChartIndex\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst EBarChart = ({xAxisData,seriesData }) => {\r\n    return (\r\n        <>\r\n                <div className=\"mx-2\">\r\n                    <ReactEcharts\r\n                        option={{\r\n                            xAxis: {\r\n                                type: 'category',\r\n                                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                            },\r\n                            yAxis: {\r\n                                type: 'value'\r\n                            },\r\n                             dataZoom: {\r\n                         title: {\r\n                         show: true,\r\n                         dataZoom: 'Range Zoom',\r\n                         dataZoomReset: 'Undo Zoom'\r\n                         },\r\n                        },\r\n                            series: [{\r\n                                data: [120, 200, 150, 80, 70, 110, 130],\r\n                                type: 'bar',\r\n                                showBackground: true,\r\n                                backgroundStyle: {\r\n                                    color: 'rgba(220, 220, 220, 0.8)'\r\n                                }\r\n                            }]\r\n                        }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EBarChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst EBarChart = () => {\r\n    return (\r\n        <>\r\n                <div className=\"mx-2\">\r\n                    <ReactEcharts\r\n                        option={{\r\n                            color: ['#003366', '#006699', '#4cabce', '#e5323e'],\r\n                            tooltip: {\r\n                                trigger: 'axis',\r\n                                axisPointer: {\r\n                                    type: 'shadow'\r\n                                }\r\n                            },\r\n                            legend: {\r\n                                data: ['Forest', 'Steppe', 'Desert', 'Wetland']\r\n                            },\r\n                            toolbox: {\r\n                                show: true,\r\n                                orient: 'vertical',\r\n                                left: 'right',\r\n                                top: 'center',\r\n                                feature: {\r\n                                    mark: {show: true},\r\n                                    dataView: {show: true, readOnly: false},\r\n                                    magicType: {show: true, type: ['line', 'bar', 'stack', 'tiled']},\r\n                                    restore: {show: true},\r\n                                    saveAsImage: {show: true}\r\n                                }\r\n                            },\r\n                            xAxis: [\r\n                                {\r\n                                    type: 'category',\r\n                                    axisTick: {show: false},\r\n                                    data: ['2012', '2013', '2014', '2015', '2016']\r\n                                }\r\n                            ],\r\n                            yAxis: [\r\n                                {\r\n                                    type: 'value'\r\n                                }\r\n                            ],\r\n                            series: [\r\n                                {\r\n                                    name: 'Forest',\r\n                                    type: 'bar',\r\n                                    barGap: 0,\r\n                                    //label: labelOption,\r\n                                    data: [320, 332, 301, 334, 390]\r\n                                },\r\n                                {\r\n                                    name: 'Steppe',\r\n                                    type: 'bar',\r\n                                    data: [220, 182, 191, 234, 290]\r\n                                },\r\n                                {\r\n                                    name: 'Desert',\r\n                                    type: 'bar',\r\n                                    //label: labelOption,\r\n                                    data: [150, 232, 201, 154, 190]\r\n                                },\r\n                                {\r\n                                    name: 'Wetland',\r\n                                    type: 'bar',\r\n                                    //label: labelOption,\r\n                                    data: [98, 77, 101, 99, 40]\r\n                                }\r\n                            ]\r\n                        }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EBarChart","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst DoubleBarChart = ({xAxisData,bar1SeriesData,bar2SeriesData,bar1Name,bar2Name}) => {\r\n\r\n    return (\r\n        <>\r\n                <div className=\"mx-2\">\r\n                    <ReactEcharts\r\n                        option={{\r\n                        color: [\"#3398DB\",'#003366', '#006699', '#4cabce'],\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data: xAxisData\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        // dataZoom: {\r\n                        //  title: {\r\n                        //  show: true,\r\n                        //  dataZoom: 'Range Zoom',\r\n                        //  dataZoomReset: 'Undo Zoom'\r\n                        //  },\r\n                        // },\r\n                        tooltip: {\r\n                            trigger: 'axis',\r\n                            axisPointer: {\r\n                                type: 'shadow'\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            data: [bar1Name, bar2Name]\r\n                        },\r\n                        // tooltip: {\r\n                        //     axisPointer: {\r\n                        //     animation: true\r\n                        //     }\r\n                        // },\r\n                        //grid: {},\r\n                        series: [\r\n                        {\r\n                            name: bar1Name,\r\n                            type: 'bar',\r\n                            barGap: 0,\r\n                            data: bar1SeriesData,\r\n                            //barWidth: \"60%\"\r\n                        },\r\n                        {\r\n                            name: bar2Name,\r\n                            type: 'bar',\r\n                            data: bar2SeriesData,\r\n                            //barWidth: \"60%\"\r\n                        },\r\n                    ]\r\n                    }}\r\n                    /> \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DoubleBarChart","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport SimpleBarChart from './SimpleBarChart';\r\nimport DoubleBarChart from './DoubleBarChart';\r\nimport EnterpriseSingleBar from './EnterpriseDoubleBar';\r\nimport EnterpriseDoubleBar from './EnterpriseDoubleBar';\r\n\r\nconst getDatesSeries = (startDate, stopDate) => {\r\n    let dateArray = [];\r\n    let currentDate = moment(startDate);\r\n    let endDate = moment(stopDate);\r\n    while (currentDate <= endDate) {\r\n        dateArray.push( moment(currentDate).format('YYYY-MM-DD') )\r\n        currentDate = moment(currentDate).add(1, 'days');\r\n    }\r\n    return dateArray;\r\n};\r\n\r\nconst fromDate = '2020-12-2';\r\nconst toDate = '2020-12-29';\r\n\r\nconst dateSeries = getDatesSeries(fromDate,toDate);\r\n\r\nconst dailyReportData = [{\"date\":\"2020-12-04\",\"newCount\":1,\"activeCount\":1},{\"date\":\"2020-12-08\",\"newCount\":1,\"activeCount\":1}]\r\n\r\n\r\nconst dateTransform = dateSeries.reduce((result, key) => {\r\n    result.push(moment(key).format(\"MMM-DD\"));\r\n    return result;\r\n  }, []);\r\n\r\n  const dateSeriesForMemberSeries = dateSeries.reduce((result, data) => {\r\n    result[data] = { date: moment(data).format(\"MMM-DD\"), activeCount: 0 , customersCreatedCount : 0 };\r\n    return result;\r\n  }, {});\r\n\r\nconst memberSeriesData = dailyReportData.reduce((result,  { date, activeCount, newCount }) => {\r\n  if (result[date]) {\r\n  result[date] = { date: moment(date).format(\"MMM-DD\"), activeCount: activeCount, customersCreatedCount : newCount }\r\n  }\r\n  return result;\r\n},  dateSeriesForMemberSeries)\r\n\r\nconst memberSeriesArray = Object.values(memberSeriesData);\r\n\r\nconst activeCountArray = memberSeriesArray.reduce((result, {activeCount}) => {\r\n  result.push(activeCount);\r\n  return result;\r\n}, []);\r\n\r\nconst newCountArray = memberSeriesArray.reduce((result, {customersCreatedCount}) => {\r\n  result.push(customersCreatedCount);\r\n  return result;\r\n}, []);\r\n\r\nconsole.debug('Test', newCountArray);\r\n\r\nconst BarChartIndex = () => {\r\n    return (\r\n        <div className='my-4 p-2'>\r\n             <h4 className='mb-3'>Line Charts</h4>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Basic Bar Chart</h6>\r\n                <div className=\"p-2\">\r\n                   <SimpleBarChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart</h6>\r\n                <div className=\"p-2\">\r\n                    <DoubleBarChart/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Single Bar Chart with Dynamic Data</h6>\r\n                <div className=\"p-2\">\r\n                    <EnterpriseSingleBar xAxisData={dateTransform} seriesData={activeCountArray}/>\r\n                </div>\r\n            </Card>\r\n            <Card className='mb-5 py-3'>\r\n                <h6 className='ml-2 px-2 mb-3'>Double Bar Chart with Dynamic Data</h6>\r\n                <div className=\"p-2\">\r\n                   <EnterpriseDoubleBar xAxisData={dateTransform}\r\n                    bar1SeriesData={newCountArray}\r\n                    bar2SeriesData={activeCountArray}\r\n                    bar1Name='New Members'\r\n                    bar2Name='Return Members'/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChartIndex\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst PieChart = ({data,title,ledgendNames}) => {\r\n\r\n    return (\r\n        <>\r\n        <div style={{minWidth:'300px'}}>\r\n            <h6>{title}</h6>\r\n                <div className=\"mx-2\">\r\n                    <ReactEcharts\r\n                        option = {{\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n                            },\r\n                            color: [\"#3398DB\",'#003366', '#006699', '#4cabce'],\r\n                            legend: {\r\n                                orient: 'vertical',\r\n                                left: 10,\r\n                                data: ledgendNames\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: title,\r\n                                    type: 'pie',\r\n                                    radius: ['50%', '70%'],\r\n                                    avoidLabelOverlap: false,\r\n                                    label: {\r\n                                        show: false,\r\n                                        position: 'center'\r\n                                    },\r\n                                    emphasis: {\r\n                                        label: {\r\n                                            show: true,\r\n                                            fontSize: '30',\r\n                                            fontWeight: 'bold'\r\n                                        }\r\n                                    },\r\n                                    labelLine: {\r\n                                        show: false\r\n                                    },\r\n                                    data : data\r\n                                }\r\n                            ]\r\n                        }}\r\n                    /> \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PieChart","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport PieChart from './PieChart';\r\n\r\nconst memberDistributionData = {\"gender\":{\"female\":1,\"male\":1},\"age\":{\"other\":1,\"45-54\":1},\"tier\":{\"\":2}};\r\n\r\nconst genderData = Object.keys(memberDistributionData.gender).map((key) => ({ 'value' : memberDistributionData.gender[key],'name' : key}));\r\n      const ageData = Object.keys(memberDistributionData.age).map((key) => ({'value' : memberDistributionData.age[key], 'name' : key}));\r\n      const tierData = Object.keys(memberDistributionData.tier).map((key) => ({'value' : memberDistributionData.tier[key], 'name' : key}));\r\n\r\n      const tierNameArray = tierData.reduce((result, {name}) => {\r\n        result.push(name);\r\n        return result;\r\n      }, []);\r\n\r\n      const genderNameArray = genderData.reduce((result, {name}) => {\r\n        result.push(name);\r\n        return result;\r\n      }, []);\r\n\r\n      const ageNameArray = ageData.reduce((result, {name}) => {\r\n        result.push(name);\r\n        return result;\r\n      }, []);\r\n\r\n\r\nconst PieChartIndex = () => {\r\n    return (\r\n        <div className='mb-3 d-flex justify-content-between'>\r\n        <Card className='p-3 mb-3 mr-2'>\r\n          <PieChart title='Tier Distribution' data={tierData} ledgendNames={tierNameArray}/>\r\n\r\n        </Card>\r\n        <Card className='p-3 mb-3 mr-2'>\r\n          <PieChart title='Age Distribution' data={ageData} ledgendNames={ageNameArray}/>\r\n        </Card>\r\n        <Card className='p-3 mb-3'>\r\n          <PieChart title='Gender Distribution' data={genderData} ledgendNames={genderNameArray}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PieChartIndex\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport HeatMapIndex from './components/heatMap/HeatMapIndex';\nimport LineChartIndex from './components/lineChart/LineChartIndex';\nimport BarChartIndex from './components/barChart/BarChartIndex';\nimport PieChartIndex from './components/pieChart/PieChartIndex';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='wrapper'>\n        <div className='side'>\n          <Navigation/>\n        </div>\n        <div className='main'>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/heat-map' component={HeatMapIndex}/>\n            <Route path='/line-chart' component={LineChartIndex}/>\n            <Route path='/bar-chart' component={BarChartIndex}/>\n            <Route path='/pie-chart' component={PieChartIndex}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}